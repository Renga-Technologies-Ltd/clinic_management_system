package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.servlet.http.HttpServletRequest;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.OrderBy;

import lombok.Getter;
import lombok.Setter;
import org.hibernate.envers.*;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.sourcetrace.eses.filter.ISecurityFilter;

/**
 * FarmCrops generated by hbm2java
 */
@Entity
@Table(name = "planting")
@Setter
@Getter
@Audited
public class Planting {

	@Id
    @GeneratedValue(generator = "uuid")
    @GenericGenerator(name = "uuid", strategy = "uuid")
    @Column(columnDefinition = "VARCHAR(255)")
    private String id;

	@Column(name = "branch_id", length = 50, columnDefinition = "VARCHAR(255)")
	private String branchId;
	
	// @ManyToOne(cascade=CascadeType.ALL)
	@Column(name = "CROP_SEASON")
	private String cropSeason;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "FARM_CROP")
	private FarmCrops farmCrops;

	@Column(name = "FARM_CROP_ID")
	private String farmCropId;

	/*
	 * @ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	 * 
	 * @JoinColumn(name = "CROP_NAME") private ProcurementProduct species;
	 */

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "VARIETY")
	private ProcurementVariety variety;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "GRADE")
	private ProcurementGrade grade;

	@Column(name = "PLANTING_ID")
	private String plantingId;

	@Column(name = "PLANTING_DATE")
	private Date plantingDate;

	@Column(name = "LOT_NO")
	private String lotNo;

	@Column(name = "CROP_CATEGORY")
	private String cropCategory;

	@Column(name = "CULT_AREA")
	private String cultiArea;

	@Column(name = "TYPE_SEED")
	private String seedSource;

	@Column(name = "CHEMICAL_USED")
	private String chemUsed;

	@Column(name = "CHEMICAL_QTY")
	private String chemQty;

	@Column(name = "SEED_QTY_PLANTED")
	private String seedQtyPlanted;

	@Column(name = "SEED_WEEK")
	private String seedWeek;

	@Column(name = "FERTLISER")
	private String fertiliser;

	@Column(name = "TYPE_FERT")
	private String typeOfFert;

	@Column(name = "FERT_QTY")
	private String fertQty;

	@Column(name = "F_LOTNO")
	private String fLotNo;

	@Column(name = "MODE_APP")
	private String modeApp;

	@Column(name = "EXP_HARVEST_WEEK")
	private String expHarvestWeek;

	@Column(name = "EXP_HARVEST_QTY")
	private String expHarvestQty;

	@Column(name = "PLOTTING_STATUS")
	private String plottingStatus;

	@Column(name = "UNIT")
	private String unit;

	@ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	@JoinColumn(name = "PLOTTING")
	private CoordinatesMap plotting;

	@Column(name = "REVISION_NO")
	private long revisionNo;

	@Column(name = "STATUS")
	private int status;

	@Column(name = "FARMER_ID")
	private String farmerId;

	@Column(name = "MSG_NO")
	private String msgNo;

	@Column(name = "FIELD_TYPE", columnDefinition = "VARCHAR(255)")
	private String fieldType;
	
	@Column(name = "CREATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	private String createdUser;
	

	@Column(name = "LAT", length = 50, columnDefinition = "VARCHAR(255)")
	private String latitude;

	
	@Column(name = "LON", length = 50, columnDefinition = "VARCHAR(255)")
	private String longitude;
	
	
	@Column(name = "IP_ADDR", length = 50, columnDefinition = "VARCHAR(255)")
	private String ipAddr;
	
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE",  length = 19)
	//@CreationTimestamp
	private Date createdDate;
	
	@Column(name = "UPDATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	private String updatedUser;
	
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE",  length = 19)
	//@UpdateTimestamp
	private Date updatedDate;

	@Version
	private Integer version;

	@PrePersist
	protected void onCreate() {
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.currentRequestAttributes()).getRequest();
		if(request.getSession()!=null){
			System.out.println(request.getSession().getAttribute(ISecurityFilter.USER_INFO));
		}
		this.createdDate = new Date();
	}

	@PreUpdate
	protected void onUpdate() {
		this.updatedDate = new Date();
	}


}
